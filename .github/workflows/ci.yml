# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        scala: [2.13]
        java: [temurin@21]
        cbor_enabled: [true, false]
        project: [root-jvm-213, root-js-213]
        service_port: [4567, 4568]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: Compile
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' fastLinkJS

      - name: Link Test JS
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' Test/fastLinkJS

      - name: Unit Tests
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: sbt 'project ${{ matrix.project }}' unit-tests/test
          retry_on: error

      - name: Docker Compose Up
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04' && startsWith(matrix.project, 'root-js')
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          retry_on: error
          command: sbt 'project ${{ matrix.project }}' dockerComposeUp
          on_retry_command: sbt 'project ${{ matrix.project }}' dockerComposeDown
          max_attempts: 3

      - name: Integration Tests
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04' && startsWith(matrix.project, 'root-js')
        env:
          CBOR_ENABLED: ${{ matrix.cbor_enabled }}
          SERVICE_PORT: ${{ matrix.service_port }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: sbt 'project ${{ matrix.project }}' integration-tests/test
          retry_on: error

      - name: Print docker logs and container listing
        if: ${{ failure() }}
        run: sbt 'project ${{ matrix.project }}' dockerComposePs dockerComposeLogs

      - name: Remove docker containers
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' dockerComposeDown

      - name: Check scalafix lints
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt 'project ${{ matrix.project }}' fixCheck

  dependency-submission:
    name: Submit Dependencies
    if: github.event.repository.fork == false && github.event_name != 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Submit Dependencies
        uses: scalacenter/sbt-dependency-submission@v2
        with:
          modules-ignore: unit-tests_sjs1_2.13 kinesis-mock-root_2.13 kinesis-mock_sjs1_2.13 kinesis-mock-root_2.13 testkit_sjs1_2.13 kinesis-mock-root_2.13 unit-tests_2.13 integration-tests_2.13 kinesis-mock_2.13 testkit_2.13
          configs-ignore: test scala-tool scala-doc-tool test-internal

  publishDocker:
    name: Publish Docker Image
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Compile
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Set up Docker Buildx
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Build Docker Image
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' kinesis-mockJS/buildDockerImage

      - name: Push to registry
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' kinesis-mockJS/pushDockerImage

  publishJSAssets:
    name: Publish JS Assets
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Compile
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Get upload url for release
        id: get_release
        uses: bruceadams/get-release@v1.3.2

      - name: Upload main.js
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./docker/image/lib/main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload main.js.map
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./docker/image/lib/main.js.map
          asset_name: main.js.map
          asset_content_type: application/json

      - name: Upload server.json
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./kinesis-mock/src/main/resources/server.json
          asset_name: server.json
          asset_content_type: application/json

  publishNPM:
    name: Publish To NPM
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Compile
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Setup Node
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install artifacts to NPM
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' npmPackageInstall

      - name: Publish artifacts to NPM
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: sbt '++ ${{ matrix.scala }}' npmPackageNpmrc npmPackagePublish

  publishAssembly:
    name: Publish Fat JAR
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: [temurin@21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Setup Java (temurin@21)
        id: setup-java-temurin-21
        if: matrix.java == 'temurin@21'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: sbt

      - name: sbt update
        if: matrix.java == 'temurin@21' && steps.setup-java-temurin-21.outputs.cache-hit == 'false'
        run: sbt +update

      - name: Compile
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Assembly
        if: matrix.java == 'temurin@21' && matrix.os == 'ubuntu-22.04'
        run: sbt '++ ${{ matrix.scala }}' kinesis-mock/assembly

      - name: Get upload url for release
        id: get_release
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        uses: bruceadams/get-release@v1.3.2

      - name: Upload kinesis-mock.jar
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./docker/image/lib/kinesis-mock.jar
          asset_name: kinesis-mock.jar
          asset_content_type: application/java-archive
