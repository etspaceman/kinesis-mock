# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**', '!update/**', '!pr/**']
  push:
    branches: ['**', '!update/**', '!pr/**']
    tags: [v*]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java: [temurin@17]
        cbor_enabled: [true, false]
        service_port: [4567, 4568]
        project: [root-jvm-213, root-js-213]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Check that workflows are up to date
        run: sbt githubWorkflowCheck

      - name: Compile
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt 'project ${{ matrix.project }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' fastLinkJS

      - name: Link Test JS
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' Test/fastLinkJS

      - name: Unit Tests
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: sbt 'project ${{ matrix.project }}' unit-tests/test
          retry_on: error

      - name: Docker Compose Up
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest' && startsWith(matrix.project, 'root-js')
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          retry_on: error
          command: sbt 'project ${{ matrix.project }}' dockerComposeUp
          on_retry_command: sbt 'project ${{ matrix.project }}' dockerComposeDown
          max_attempts: 3

      - name: Integration Tests
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest' && startsWith(matrix.project, 'root-js')
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: sbt 'project ${{ matrix.project }}' integration-tests/test
          retry_on: error

      - name: Print docker logs and container listing
        if: ${{ failure() }}
        run: sbt 'project ${{ matrix.project }}' dockerComposePs dockerComposeLogs

      - name: Remove docker containers
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest' && startsWith(matrix.project, 'root-js')
        run: sbt 'project ${{ matrix.project }}' dockerComposeDown

      - name: Check scalafix lints
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt 'project ${{ matrix.project }}' fixCheck

  publishDocker:
    name: Publish Docker Image
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Compile
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Build Docker Image
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' kinesis-mockJS/buildDockerImage

      - name: Login to registry
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Push to registry
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: 'docker push ghcr.io/etspaceman/kinesis-mock:${{ github.ref_name }}'

  publishJSAssets:
    name: Publish JS Assets
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Compile
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Upload main.js
        env:
          GITHUB_TOKEN: '{{ secrets.GITHUB_TOKEN }}'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./docker/image/lib/main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload main.js.map
        env:
          GITHUB_TOKEN: '{{ secrets.GITHUB_TOKEN }}'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./docker/image/lib/main.js.map
          asset_name: main.js.map
          asset_content_type: application/json

  publishNPM:
    name: Publish To NPM
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: [temurin@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Java (temurin@17)
        id: download-java-temurin-17
        if: matrix.java == 'temurin@17'
        uses: typelevel/download-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Java (temurin@17)
        if: matrix.java == 'temurin@17'
        uses: actions/setup-java@v3
        with:
          distribution: jdkfile
          java-version: 17
          jdkFile: ${{ steps.download-java-temurin-17.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Compile
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' cpl

      - name: Link JS
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' fullLinkJS

      - name: Setup Node
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: '{{ secrets.GITHUB_TOKEN }}'
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install artifacts to NPM
        if: matrix.java == 'temurin@17' && matrix.os == 'ubuntu-latest'
        run: sbt '++ ${{ matrix.scala }}' npmPackageInstall

      - name: Publish artifacts to NPM
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: sbt '++ ${{ matrix.scala }}' npmPackageNpmrc npmPackagePublish
